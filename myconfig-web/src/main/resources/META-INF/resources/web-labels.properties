app.title = myconfig
app.version = ${project.version}
app.settings = Settings
app.login = Log in
app.logout = Log out

general.error = An error has occurred.\nMessage: {0}\nReference: {1}

general.yes = Yes
general.no = No

general.cancel = Cancel
general.disabled = Disabled
general.enabled = Enabled
general.delete = Delete
general.delete.tip = Delete
general.delete.prompt = Are you sure to delete?
general.create = Create
general.create.label = Create new
general.update = Update
general.submit = Submit

login = @[app.login]
login.user = User
login.password = Password
login.submit = Connect

error = Error
error.title = An error has occurred, that could not be processed correctly.
error.contact = Please contact the support with the following information:

home = Home page
home.welcome = Welcome to @[app.title]!
home.ui = Web access
home.ui.button = UI
home.ui.message = Click %here% to access the Web interface.
home.get = GET interface
home.get.message = Getting access to the configuration is done using one of the REST GET URLs:
home.api = API interface
home.api.message = @[app.title] allows you also to access the application through a REST API. Following URLs are available:

settings = General settings

users = User management
users.userfunction.error = Cannot set or unset the function to the user
users.userfunction.admin = All functions are granted to the administrator 
users.create = New user
users.create.submit = Create
users.delete = Do you want to delete the \"{0}\" user?

userConfirm = Confirmation for user \"{0}\"
userConfirm.confirmPassword = Confirm password
userConfirm.submit = Confirm registration

applications = Configured applications
applications.new = Create new application
applications.versionCount = # versions
applications.keyCount = # keys
applications.environmentCount = # environments
applications.missingValuesCount = # missing values

application = Application configuration
application.title = Configuration of \"{0}\"
application.versions = Versions
application.version.keyCount = Associated keys
application.version.missingCount = Missing values
application.version.new = Create a version
application.environments = Environments
application.environment.missingCount = Missing values
application.environment.new = Create an environment
application.keys = Keys
application.key.versionCount = Associated versions
application.key.missingCount = Missing values
application.key.new = Create a key
application.key.update.title = Update description for key \"{0}\"
application.key.update.submit = Update description

matrix = Keys x Versions
matrix.title = @[matrix] for {0}
matrix.key = Key
matrix.key.yes = Key is used by this version
matrix.key.no = Key is not used by this version
matrix.newKey = Create a new key

configuration.changes.submit = Submit changes
configuration.changes.reset = Reset changes
configuration.changes.confirm = Confirmation of changes
configuration.change.environment = Environment
configuration.change.version = Version
configuration.change.key = Key
configuration.change.oldvalue = Old value
configuration.change.value = New value

versionConfiguration = Configuration for version {0}

environmentConfiguration = Configuration for environment {0}
environmentConfiguration.na = n/a 
environmentConfiguration.na.tip = The \"{0}\" key is not available for the \"{1}\" version. Click on the link to configure it.

keyConfiguration = Configuration for key {0}

rest.AbstractRESTController.version = Gets the version of the API

rest.GetController.key = Accessing the value of a key for a given version and environment
rest.GetController.env = Gets all configuration values for a given version and environment. The mode specifies the way this configuration is rendered: xml, json and properties. A variant allows to specify the exact format.
rest.GetController.env_default = Gets all configuration values for a given version and environment. The mode specifies the way this configuration is rendered: xml, json and properties

rest.UIController.applications = Lists all configured applications
rest.UIController.applicationCreate = Creates an application
rest.UIController.applicationDelete = Deletes an application
rest.UIController.applicationConfiguration = Gets the configuration elements of an application (versions, keys, environments...)
rest.UIController.versionCreate = Creates a version for an application
rest.UIController.versionDelete = Deletes a version for an application
rest.UIController.environmentCreate = Creates an environment for an application
rest.UIController.environmentDelete = Deletes an environment for an application
rest.UIController.keyCreate = Creates a key for an application
rest.UIController.keyDelete = Deletes a key for an application
rest.UIController.versionConfiguration = Gets the configuration for a version, for all environments and keys 
rest.UIController.environmentConfiguration = Gets the configuration for an environment, for all versions and keys
rest.UIController.keyConfiguration = Gets the configuration for a key, for all versions and environments
rest.UIController.keyVersionConfiguration = Gets the mapping between the keys and the versions
rest.UIController.keyVersionAdd = Adds a mapping between a key and a version
rest.UIController.keyVersionRemove = Removes a mapping between a key and a version
rest.UIController.updateConfiguration = Updates configuration values for an application
rest.UIController.keyUpdate = Updates the description for a key
rest.UIController.users = Gets the list of users

net.myconfig.web.settings.SecuritySettingsCollaborator = Security settings
net.myconfig.web.settings.SecuritySettingsCollaborator.mode = Security mode
net.myconfig.web.settings.SecuritySettingsCollaborator.builtin.users = User management
net.myconfig.web.settings.SecuritySettingsCollaborator.builtin.users.warning = User management is only available for @[net.myconfig.service.api.security.SecurityManagement.builtin] mode.

